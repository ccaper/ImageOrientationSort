<project name="ImageOrientationSort" default="dist" basedir=".">
  <description>
        Ant build file for ImageOrientationSort
    </description>
  <!-- set global properties for this build -->
  <property name="srcDir" location="src" />
  <property name="buildDir" location="build" />
  <property name="distDir" location="dist" />
  <property name="confDir" location="conf" />
  <property name="classes" value="classes" />
  <property name="libs" value="libs" />
  <property name="conf" value="conf" />
  <property name="test_src" value="test" />
  <property name="third_party_libs" value="../../ccaper-local/libs/libs" />
  <property name="junit" value="junit" />

  <fileset id="build_jars" dir="${third_party_libs}">
    <patternset>
      <include name="spring/spring-framework-3.2.2/libs/spring-beans-3.2.2.RELEASE.jar" />
      <include name="spring/spring-framework-3.2.2/libs/spring-context-3.2.2.RELEASE.jar" />
      <include name="spring/spring-framework-3.2.2/libs/spring-context-support-3.2.2.RELEASE.jar" />
      <include name="spring/spring-framework-3.2.2/libs/spring-core-3.2.2.RELEASE.jar" />
      <include name="spring/spring-framework-3.2.2/libs/spring-expression-3.2.2.RELEASE.jar" />
      <include name="commons-logging/commons-logging-1.1.1/commons-logging-1.1.1.jar" />
      <include name="log4j/1.2.17/log4j-1.2.17.jar" />
      <include name="commons-lang/commons-lang-3-3.1/commons-lang3-3.1.jar" />
      <include name="commons-io/commons-io-2.4/commons-io-2.4.jar" />
      <include name="javax.inject/javax.inject-1/javax.inject-1.jar" />
    </patternset>
  </fileset>

  <fileset id="test_jars" dir="${third_party_libs}">
    <patternset>
      <include name="cglib/cglib-2.2.3/cglib-nodep-2.2.3.jar" />
      <include name="junit/junit-4.11/junit-4.11.jar" />
      <include name="spring/spring-framework-3.2.2/libs/spring-test-3.2.2.RELEASE.jar" />
      <include name="easymock/easymock-3.1/easymock-3.1.jar" />
      <include name="easymock/easymockclassextension-3.1/easymockclassextension-3.1.jar" />
      <include name="objenesis/objenesis-1.1/objenesis-1.1.jar" />
    </patternset>
  </fileset>

  <path id="classpath">
    <fileset dir="${buildDir}/${libs}">
      <include name="*.jar" />
    </fileset>
    <pathelement path="${buildDir}" />
  </path>

  <target name="init">
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${buildDir}" />
  </target>

  <target name="compile" depends="init" description="compile the source ">
    <!-- Compile the java code from ${srcDir} into ${buildDir} -->
    <copy todir="${buildDir}/${libs}" flatten="true">
      <fileset refid="build_jars" />
    </copy>
    <javac srcdir="${srcDir}" destdir="${buildDir}" includeAntRuntime="false" debug="true">
      <classpath refid="classpath" />
    </javac>
  </target>

  <target name="_copy_conf">
    <copy todir="${distDir}/${conf}" flatten="false">
      <fileset dir="${confDir}">
        <patternset>
          <include name="ImageOrientationSort.properties" />
        </patternset>
      </fileset>
    </copy>
  </target>

  <target name="_copy_libs">
    <copy todir="${distDir}/${libs}" flatten="false">
      <fileset dir="${buildDir}/${libs}">
        <patternset>
          <include name="*.jar" />
        </patternset>
      </fileset>
    </copy>
  </target>

  <target name="dist" depends="clean,compile,_copy_conf,_copy_libs" description="generate the distribution">
    <!-- Create the distribution directory -->
    <mkdir dir="${distDir}" />

    <manifestclasspath property="manifest.classpath" jarfile="${distDir}/ImageOrientationSort.jar">
      <classpath>
        <pathelement path="${distDir}/${conf}" />
        <fileset dir="${distDir}/${libs}">
          <include name="**/*.jar" />
        </fileset>
      </classpath>
    </manifestclasspath>
    <!-- Put everything in ${buildDir} into the MyProject-${DSTAMP}.jar file -->
    <jar destfile="${distDir}/ImageOrientationSort.jar">
      <fileset dir="${buildDir}">
        <exclude name="**/*Test*.class" />
        <include name="**/*.class" />
      </fileset>
      <fileset dir="${confDir}">
        <include name="**/*.properties" />
        <include name="**/*.xml" />
        <exclude name="ImageOrientationSort.properties" />
      </fileset>
      <manifest>
        <attribute name="Main-Class" value="net.ccaper.ImageOrientationImageSort.Driver" />
        <attribute name="Class-Path" value="${manifest.classpath}" />
      </manifest>
    </jar>
  </target>

  <target name="clean" description="clean up">
    <!-- Delete the ${buildDir} and ${distDir} directory trees -->
    <delete dir="${buildDir}" />
    <delete dir="${distDir}" />
    <delete dir="${junit}" quiet="true" />
  </target>

  <target name="_test_cp_jars" depends="compile">
    <copy todir="${buildDir}/${libs}" flatten="true">
      <fileset refid="test_jars" />
    </copy>
  </target>

  <target name="test" depends="clean,_test_cp_jars">
    <mkdir dir="${junit}" />
    <javac srcdir="${test_src}" destdir="${buildDir}" failonerror="true" verbose="true" debug="true" includeAntRuntime="false">
      <classpath refid="classpath" />
    </javac>
    <junit errorProperty="${TEST_FAILED}" failureProperty="${TEST_FAILED}">
      <batchtest fork="yes" todir="${junit}">
        <fileset dir="${test_src}">
          <include name="**/*Test*.java" />
          <exclude name="**/AllTests.java" />
        </fileset>
      </batchtest>
      <classpath refid="classpath" />
      <classpath location="${conf}" />
      <formatter type="plain" usefile="false" />
      <formatter type="xml" />
    </junit>
    <fail if="${TEST_FAILED}" message="Tests failed." />
  </target>
</project>